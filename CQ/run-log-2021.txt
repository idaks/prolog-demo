Welcome to SWI-Prolog (Multi-threaded, 64 bits, Version 7.2.3)
Copyright (c) 1990-2015 University of Amsterdam, VU Amsterdam
SWI-Prolog comes with ABSOLUTELY NO WARRANTY. This is free software,
and you are welcome to redistribute it under certain conditions.
Please visit http://www.swi-prolog.org for details.

For help, use ?- help(Topic). or ?- apropos(Word).

?- [cqcp].
true.

?- go.

============================= LOADING sample.swi =============================
:- dynamic (::)/2.

q1::answer(A, B)<-[p(A, B)].
q2::answer(A, A)<-[p(A, A)].

% total of 2 queries loaded.

------------------------------ CONTAINMENT TESTS------------------------------
.
q2 => q1; sigma = [c1,c1]
  answer(X1,X1)<-[p(X1,X1)] =>
  answer(Y1,Y2)<-[p(Y1,Y2)]

------------------------ INTEGRITY CONSTRAINTS TESTS -------------------------

------------------------------- MINIMIZATIONS --------------------------------
q1 is minimal:
    answer(A,B)<-[p(A,B)]
q2 is minimal:
    answer(A,A)<-[p(A,A)]

========================= LOADING uncle_queries.swi ==========================
:- dynamic (::)/2.

1::uncle(B, A)<-[male(A), father(B, C), father(C, D), father(A, D), neq(C, A)].
2::uncle(B, A)<-[male(A), mother(B, C), father(C, D), father(A, D), neq(C, A)].
3::uncle(B, A)<-[male(A), father(B, C), mother(C, D), father(A, D), neq(C, A)].
4::uncle(B, A)<-[male(A), mother(B, C), mother(C, D), father(A, D), neq(C, A)].
5::uncle(B, A)<-[male(A), father(B, C), father(C, D), mother(A, D), neq(C, A)].
6::uncle(B, A)<-[male(A), mother(B, C), father(C, D), mother(A, D), neq(C, A)].
7::uncle(B, A)<-[male(A), father(B, C), mother(C, D), mother(A, D), neq(C, A)].
8::uncle(B, A)<-[male(A), mother(B, C), mother(C, D), mother(A, D), neq(C, A)].
9::uncle(A, B)<-[father(A, D), spouse(C, B), female(C), father(D, E), father(C, E), neq(D, C)].
10::uncle(A, B)<-[mother(A, D), spouse(C, B), female(C), father(D, E), father(C, E), neq(D, C)].
11::uncle(A, B)<-[father(A, D), spouse(C, B), female(C), mother(D, E), father(C, E), neq(D, C)].
12::uncle(A, B)<-[mother(A, D), spouse(C, B), female(C), mother(D, E), father(C, E), neq(D, C)].
13::uncle(A, B)<-[father(A, D), spouse(C, B), female(C), father(D, E), mother(C, E), neq(D, C)].
14::uncle(A, B)<-[mother(A, D), spouse(C, B), female(C), father(D, E), mother(C, E), neq(D, C)].
15::uncle(A, B)<-[father(A, D), spouse(C, B), female(C), mother(D, E), mother(C, E), neq(D, C)].
16::uncle(A, B)<-[mother(A, D), spouse(C, B), female(C), mother(D, E), mother(C, E), neq(D, C)].
17::uncle(B, A)<-[male(A), father(B, C), spouse(C, D), father(D, E), father(A, E), neq(D, A)].
18::uncle(B, A)<-[male(A), mother(B, C), spouse(C, D), father(D, E), father(A, E), neq(D, A)].
19::uncle(B, A)<-[male(A), father(B, C), spouse(C, D), mother(D, E), father(A, E), neq(D, A)].
20::uncle(B, A)<-[male(A), mother(B, C), spouse(C, D), mother(D, E), father(A, E), neq(D, A)].
21::uncle(B, A)<-[male(A), father(B, C), spouse(C, D), father(D, E), mother(A, E), neq(D, A)].
22::uncle(B, A)<-[male(A), mother(B, C), spouse(C, D), father(D, E), mother(A, E), neq(D, A)].
23::uncle(B, A)<-[male(A), father(B, C), spouse(C, D), mother(D, E), mother(A, E), neq(D, A)].
24::uncle(B, A)<-[male(A), mother(B, C), spouse(C, D), mother(D, E), mother(A, E), neq(D, A)].
ic(1)::false(chtg(A))<-[father(_, A), mother(_, A)].

% total of 25 queries loaded.

------------------------------ CONTAINMENT TESTS------------------------------
........................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................
------------------------ INTEGRITY CONSTRAINTS TESTS -------------------------
..
3 is UNSATISFIABLE for ic(1)
  uncle(c2,c1)<-[male(c1),father(c2,c3),mother(c3,c4),father(c1,c4),neq(c3,c1)] =>
  false(chtg(c4))<-[father(c1,c4),mother(c3,c4)]

4 is UNSATISFIABLE for ic(1)
  uncle(c2,c1)<-[male(c1),mother(c2,c3),mother(c3,c4),father(c1,c4),neq(c3,c1)] =>
  false(chtg(c4))<-[father(c1,c4),mother(c3,c4)]

5 is UNSATISFIABLE for ic(1)
  uncle(c2,c1)<-[male(c1),father(c2,c3),father(c3,c4),mother(c1,c4),neq(c3,c1)] =>
  false(chtg(c4))<-[father(c3,c4),mother(c1,c4)]

6 is UNSATISFIABLE for ic(1)
  uncle(c2,c1)<-[male(c1),mother(c2,c3),father(c3,c4),mother(c1,c4),neq(c3,c1)] =>
  false(chtg(c4))<-[father(c3,c4),mother(c1,c4)]
....
11 is UNSATISFIABLE for ic(1)
  uncle(c1,c4)<-[father(c1,c2),spouse(c3,c4),female(c3),mother(c2,c5),father(c3,c5),neq(c2,c3)] =>
  false(chtg(c5))<-[father(c3,c5),mother(c2,c5)]

12 is UNSATISFIABLE for ic(1)
  uncle(c1,c4)<-[mother(c1,c2),spouse(c3,c4),female(c3),mother(c2,c5),father(c3,c5),neq(c2,c3)] =>
  false(chtg(c5))<-[father(c3,c5),mother(c2,c5)]

13 is UNSATISFIABLE for ic(1)
  uncle(c1,c4)<-[father(c1,c2),spouse(c3,c4),female(c3),father(c2,c5),mother(c3,c5),neq(c2,c3)] =>
  false(chtg(c5))<-[father(c2,c5),mother(c3,c5)]

14 is UNSATISFIABLE for ic(1)
  uncle(c1,c4)<-[mother(c1,c2),spouse(c3,c4),female(c3),father(c2,c5),mother(c3,c5),neq(c2,c3)] =>
  false(chtg(c5))<-[father(c2,c5),mother(c3,c5)]
....
19 is UNSATISFIABLE for ic(1)
  uncle(c2,c1)<-[male(c1),father(c2,c3),spouse(c3,c4),mother(c4,c5),father(c1,c5),neq(c4,c1)] =>
  false(chtg(c5))<-[father(c1,c5),mother(c4,c5)]

20 is UNSATISFIABLE for ic(1)
  uncle(c2,c1)<-[male(c1),mother(c2,c3),spouse(c3,c4),mother(c4,c5),father(c1,c5),neq(c4,c1)] =>
  false(chtg(c5))<-[father(c1,c5),mother(c4,c5)]

21 is UNSATISFIABLE for ic(1)
  uncle(c2,c1)<-[male(c1),father(c2,c3),spouse(c3,c4),father(c4,c5),mother(c1,c5),neq(c4,c1)] =>
  false(chtg(c5))<-[father(c4,c5),mother(c1,c5)]

22 is UNSATISFIABLE for ic(1)
  uncle(c2,c1)<-[male(c1),mother(c2,c3),spouse(c3,c4),father(c4,c5),mother(c1,c5),neq(c4,c1)] =>
  false(chtg(c5))<-[father(c4,c5),mother(c1,c5)]
..
------------------------------- MINIMIZATIONS --------------------------------
1 is minimal:
    uncle(A,B)<-[male(B),father(A,C),father(C,D),father(B,D),neq(C,B)]
2 is minimal:
    uncle(A,B)<-[male(B),mother(A,C),father(C,D),father(B,D),neq(C,B)]
3 is minimal:
    uncle(A,B)<-[male(B),father(A,C),mother(C,D),father(B,D),neq(C,B)]
4 is minimal:
    uncle(A,B)<-[male(B),mother(A,C),mother(C,D),father(B,D),neq(C,B)]
5 is minimal:
    uncle(A,B)<-[male(B),father(A,C),father(C,D),mother(B,D),neq(C,B)]
6 is minimal:
    uncle(A,B)<-[male(B),mother(A,C),father(C,D),mother(B,D),neq(C,B)]
7 is minimal:
    uncle(A,B)<-[male(B),father(A,C),mother(C,D),mother(B,D),neq(C,B)]
8 is minimal:
    uncle(A,B)<-[male(B),mother(A,C),mother(C,D),mother(B,D),neq(C,B)]
9 is minimal:
    uncle(A,B)<-[father(A,C),spouse(D,B),female(D),father(C,E),father(D,E),neq(C,D)]
10 is minimal:
    uncle(A,B)<-[mother(A,C),spouse(D,B),female(D),father(C,E),father(D,E),neq(C,D)]
11 is minimal:
    uncle(A,B)<-[father(A,C),spouse(D,B),female(D),mother(C,E),father(D,E),neq(C,D)]
12 is minimal:
    uncle(A,B)<-[mother(A,C),spouse(D,B),female(D),mother(C,E),father(D,E),neq(C,D)]
13 is minimal:
    uncle(A,B)<-[father(A,C),spouse(D,B),female(D),father(C,E),mother(D,E),neq(C,D)]
14 is minimal:
    uncle(A,B)<-[mother(A,C),spouse(D,B),female(D),father(C,E),mother(D,E),neq(C,D)]
15 is minimal:
    uncle(A,B)<-[father(A,C),spouse(D,B),female(D),mother(C,E),mother(D,E),neq(C,D)]
16 is minimal:
    uncle(A,B)<-[mother(A,C),spouse(D,B),female(D),mother(C,E),mother(D,E),neq(C,D)]
17 is minimal:
    uncle(A,B)<-[male(B),father(A,C),spouse(C,D),father(D,E),father(B,E),neq(D,B)]
18 is minimal:
    uncle(A,B)<-[male(B),mother(A,C),spouse(C,D),father(D,E),father(B,E),neq(D,B)]
19 is minimal:
    uncle(A,B)<-[male(B),father(A,C),spouse(C,D),mother(D,E),father(B,E),neq(D,B)]
20 is minimal:
    uncle(A,B)<-[male(B),mother(A,C),spouse(C,D),mother(D,E),father(B,E),neq(D,B)]
21 is minimal:
    uncle(A,B)<-[male(B),father(A,C),spouse(C,D),father(D,E),mother(B,E),neq(D,B)]
22 is minimal:
    uncle(A,B)<-[male(B),mother(A,C),spouse(C,D),father(D,E),mother(B,E),neq(D,B)]
23 is minimal:
    uncle(A,B)<-[male(B),father(A,C),spouse(C,D),mother(D,E),mother(B,E),neq(D,B)]
24 is minimal:
    uncle(A,B)<-[male(B),mother(A,C),spouse(C,D),mother(D,E),mother(B,E),neq(D,B)]
ic(1) is minimal:
    false(chtg(A))<-[father(B,A),mother(C,A)]

============================= LOADING ecs265.swi =============================
:- dynamic (::)/2.

q1::ans(B, D, A)<-[p(F, C, A), p(B, C, E), p(C, D, E), p(B, G, _), p(F, G, A)].
q2::ans(B, D, A)<-[p(_, C, A), p(B, C, E), p(_, D, E)].

% total of 2 queries loaded.

------------------------------ CONTAINMENT TESTS------------------------------

q1 => q2; sigma = [c1,c2,c3,c4,c5,c6,c5]
  ans(X1,X2,X3)<-[p(X4,X5,X3),p(X1,X5,X6),p(X5,X2,X6),p(X1,X7,X8),p(X4,X7,X3)] =>
  ans(Y1,Y2,Y3)<-[p(Y4,Y5,Y3),p(Y1,Y5,Y6),p(Y7,Y2,Y6)]
.
------------------------ INTEGRITY CONSTRAINTS TESTS -------------------------

------------------------------- MINIMIZATIONS --------------------------------
q1 CAN BE MINIMIZED:
    ans(A,B,C)<-[p(D,E,C),p(A,E,F),p(E,B,F),p(A,G,H),p(D,G,C)]
<=> ans(A,B,C)<-[p(E,B,F),p(A,E,F),p(D,E,C)]
q2 is minimal:
    ans(A,B,C)<-[p(D,E,C),p(A,E,F),p(G,B,F)]
true.

?- 